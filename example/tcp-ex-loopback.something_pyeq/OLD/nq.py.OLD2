#!/usr/bin/python
Q_NUM=42


import struct
import sys
import time

from socket import AF_INET, AF_INET6, inet_ntoa

import nfqueue

from scapy.all import *
import hexdump as hd

from dpkt import ip

qq=[]

def cb(i, payload):
        for payload in qq:
                print '=== QQ PKT ==='
                data = payload.get_data()
                hd.hexdump(data)    
                ip=IP(data)
                print ip.summary()

                payload.set_verdict(nfqueue.NF_ACCEPT)
                sys.stdout.flush()

        print '=== PKT ==='
	data = payload.get_data()
        hd.hexdump(data)    
        ip=IP(data)
        print ip.summary()

	payload.set_verdict(nfqueue.NF_QUEUE)
        qq.append(payload)
	sys.stdout.flush()
	return 1

q = nfqueue.queue()

print "setting callback"
q.set_callback(cb)

print "open"
q.fast_open(Q_NUM, AF_INET)

q.set_queue_maxlen(50000)

fd = q.get_fd()

import socket
s = socket.fromfd(fd, socket.AF_UNIX, socket.SOCK_STREAM)
import ctypes
libnfq_c = ctypes.CDLL("libnetfilter_queue.so.1")
while True:
        print "recv"
        d = s.recv(65536)
        print "socket loop d=%d" % d
#        if d >= 0:
#            nfq_handle_packet(self.h, d, len(d))
s.close()

print "unbind"
q.unbind(AF_INET)

print "close"
q.close()

