// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: i2g_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "i2g_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace equtils {

namespace {

const ::google::protobuf::Descriptor* I2GMsgReq_Event_FuncCall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  I2GMsgReq_Event_FuncCall_reflection_ = NULL;
const ::google::protobuf::Descriptor* I2GMsgReq_Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  I2GMsgReq_Event_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* I2GMsgReq_Event_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* I2GMsgReq_Initiation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  I2GMsgReq_Initiation_reflection_ = NULL;
const ::google::protobuf::Descriptor* I2GMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  I2GMsgReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* I2GMsgReq_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* I2GMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  I2GMsgRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* I2GMsgRsp_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_i2g_5fmessage_2eproto() {
  protobuf_AddDesc_i2g_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "i2g_message.proto");
  GOOGLE_CHECK(file != NULL);
  I2GMsgReq_Event_FuncCall_descriptor_ = file->message_type(0);
  static const int I2GMsgReq_Event_FuncCall_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event_FuncCall, name_),
  };
  I2GMsgReq_Event_FuncCall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      I2GMsgReq_Event_FuncCall_descriptor_,
      I2GMsgReq_Event_FuncCall::default_instance_,
      I2GMsgReq_Event_FuncCall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event_FuncCall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event_FuncCall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(I2GMsgReq_Event_FuncCall));
  I2GMsgReq_Event_descriptor_ = file->message_type(1);
  static const int I2GMsgReq_Event_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event, funccall_),
  };
  I2GMsgReq_Event_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      I2GMsgReq_Event_descriptor_,
      I2GMsgReq_Event::default_instance_,
      I2GMsgReq_Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Event, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(I2GMsgReq_Event));
  I2GMsgReq_Event_Type_descriptor_ = I2GMsgReq_Event_descriptor_->enum_type(0);
  I2GMsgReq_Initiation_descriptor_ = file->message_type(2);
  static const int I2GMsgReq_Initiation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Initiation, nodeid_),
  };
  I2GMsgReq_Initiation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      I2GMsgReq_Initiation_descriptor_,
      I2GMsgReq_Initiation::default_instance_,
      I2GMsgReq_Initiation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Initiation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq_Initiation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(I2GMsgReq_Initiation));
  I2GMsgReq_descriptor_ = file->message_type(3);
  static const int I2GMsgReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, ga_msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, initiation_),
  };
  I2GMsgReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      I2GMsgReq_descriptor_,
      I2GMsgReq::default_instance_,
      I2GMsgReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(I2GMsgReq));
  I2GMsgReq_Type_descriptor_ = I2GMsgReq_descriptor_->enum_type(0);
  I2GMsgRsp_descriptor_ = file->message_type(4);
  static const int I2GMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgRsp, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgRsp, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgRsp, ga_msg_id_),
  };
  I2GMsgRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      I2GMsgRsp_descriptor_,
      I2GMsgRsp::default_instance_,
      I2GMsgRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(I2GMsgRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(I2GMsgRsp));
  I2GMsgRsp_Result_descriptor_ = I2GMsgRsp_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_i2g_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    I2GMsgReq_Event_FuncCall_descriptor_, &I2GMsgReq_Event_FuncCall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    I2GMsgReq_Event_descriptor_, &I2GMsgReq_Event::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    I2GMsgReq_Initiation_descriptor_, &I2GMsgReq_Initiation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    I2GMsgReq_descriptor_, &I2GMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    I2GMsgRsp_descriptor_, &I2GMsgRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_i2g_5fmessage_2eproto() {
  delete I2GMsgReq_Event_FuncCall::default_instance_;
  delete I2GMsgReq_Event_FuncCall_reflection_;
  delete I2GMsgReq_Event::default_instance_;
  delete I2GMsgReq_Event_reflection_;
  delete I2GMsgReq_Initiation::default_instance_;
  delete I2GMsgReq_Initiation_reflection_;
  delete I2GMsgReq::default_instance_;
  delete I2GMsgReq_reflection_;
  delete I2GMsgRsp::default_instance_;
  delete I2GMsgRsp_reflection_;
}

void protobuf_AddDesc_i2g_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021i2g_message.proto\022\007equtils\"(\n\030I2GMsgRe"
    "q_Event_FuncCall\022\014\n\004name\030\001 \002(\t\"\212\001\n\017I2GMs"
    "gReq_Event\022+\n\004type\030\001 \002(\0162\035.equtils.I2GMs"
    "gReq_Event.Type\0223\n\010FuncCall\030\002 \001(\0132!.equt"
    "ils.I2GMsgReq_Event_FuncCall\"\025\n\004Type\022\r\n\t"
    "FUNC_CALL\020\001\"&\n\024I2GMsgReq_Initiation\022\016\n\006n"
    "odeId\030\001 \002(\t\"\377\001\n\tI2GMsgReq\022\017\n\007node_id\030\001 \002"
    "(\t\022%\n\004type\030\002 \002(\0162\027.equtils.I2GMsgReq.Typ"
    "e\022\013\n\003pid\030\003 \002(\005\022\013\n\003tid\030\004 \002(\005\022\016\n\006msg_id\030\005 "
    "\002(\005\022\021\n\tga_msg_id\030\006 \001(\005\022\'\n\005Event\030\007 \001(\0132\030."
    "equtils.I2GMsgReq_Event\0221\n\nInitiation\030\010 "
    "\001(\0132\035.equtils.I2GMsgReq_Initiation\"!\n\004Ty"
    "pe\022\t\n\005EVENT\020\001\022\016\n\nINITIATION\020\002\"}\n\tI2GMsgR"
    "sp\022&\n\003res\030\001 \002(\0162\031.equtils.I2GMsgRsp.Resu"
    "lt\022\016\n\006msg_id\030\002 \001(\005\022\021\n\tga_msg_id\030\003 \001(\005\"%\n"
    "\006Result\022\007\n\003ACK\020\001\022\t\n\005ERROR\020\002\022\007\n\003END\020\003", 636);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "i2g_message.proto", &protobuf_RegisterTypes);
  I2GMsgReq_Event_FuncCall::default_instance_ = new I2GMsgReq_Event_FuncCall();
  I2GMsgReq_Event::default_instance_ = new I2GMsgReq_Event();
  I2GMsgReq_Initiation::default_instance_ = new I2GMsgReq_Initiation();
  I2GMsgReq::default_instance_ = new I2GMsgReq();
  I2GMsgRsp::default_instance_ = new I2GMsgRsp();
  I2GMsgReq_Event_FuncCall::default_instance_->InitAsDefaultInstance();
  I2GMsgReq_Event::default_instance_->InitAsDefaultInstance();
  I2GMsgReq_Initiation::default_instance_->InitAsDefaultInstance();
  I2GMsgReq::default_instance_->InitAsDefaultInstance();
  I2GMsgRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_i2g_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_i2g_5fmessage_2eproto {
  StaticDescriptorInitializer_i2g_5fmessage_2eproto() {
    protobuf_AddDesc_i2g_5fmessage_2eproto();
  }
} static_descriptor_initializer_i2g_5fmessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int I2GMsgReq_Event_FuncCall::kNameFieldNumber;
#endif  // !_MSC_VER

I2GMsgReq_Event_FuncCall::I2GMsgReq_Event_FuncCall()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:equtils.I2GMsgReq_Event_FuncCall)
}

void I2GMsgReq_Event_FuncCall::InitAsDefaultInstance() {
}

I2GMsgReq_Event_FuncCall::I2GMsgReq_Event_FuncCall(const I2GMsgReq_Event_FuncCall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:equtils.I2GMsgReq_Event_FuncCall)
}

void I2GMsgReq_Event_FuncCall::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

I2GMsgReq_Event_FuncCall::~I2GMsgReq_Event_FuncCall() {
  // @@protoc_insertion_point(destructor:equtils.I2GMsgReq_Event_FuncCall)
  SharedDtor();
}

void I2GMsgReq_Event_FuncCall::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void I2GMsgReq_Event_FuncCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* I2GMsgReq_Event_FuncCall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_Event_FuncCall_descriptor_;
}

const I2GMsgReq_Event_FuncCall& I2GMsgReq_Event_FuncCall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_i2g_5fmessage_2eproto();
  return *default_instance_;
}

I2GMsgReq_Event_FuncCall* I2GMsgReq_Event_FuncCall::default_instance_ = NULL;

I2GMsgReq_Event_FuncCall* I2GMsgReq_Event_FuncCall::New() const {
  return new I2GMsgReq_Event_FuncCall;
}

void I2GMsgReq_Event_FuncCall::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool I2GMsgReq_Event_FuncCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:equtils.I2GMsgReq_Event_FuncCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:equtils.I2GMsgReq_Event_FuncCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:equtils.I2GMsgReq_Event_FuncCall)
  return false;
#undef DO_
}

void I2GMsgReq_Event_FuncCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:equtils.I2GMsgReq_Event_FuncCall)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:equtils.I2GMsgReq_Event_FuncCall)
}

::google::protobuf::uint8* I2GMsgReq_Event_FuncCall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:equtils.I2GMsgReq_Event_FuncCall)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:equtils.I2GMsgReq_Event_FuncCall)
  return target;
}

int I2GMsgReq_Event_FuncCall::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void I2GMsgReq_Event_FuncCall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const I2GMsgReq_Event_FuncCall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const I2GMsgReq_Event_FuncCall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void I2GMsgReq_Event_FuncCall::MergeFrom(const I2GMsgReq_Event_FuncCall& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void I2GMsgReq_Event_FuncCall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I2GMsgReq_Event_FuncCall::CopyFrom(const I2GMsgReq_Event_FuncCall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I2GMsgReq_Event_FuncCall::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void I2GMsgReq_Event_FuncCall::Swap(I2GMsgReq_Event_FuncCall* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata I2GMsgReq_Event_FuncCall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = I2GMsgReq_Event_FuncCall_descriptor_;
  metadata.reflection = I2GMsgReq_Event_FuncCall_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* I2GMsgReq_Event_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_Event_Type_descriptor_;
}
bool I2GMsgReq_Event_Type_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const I2GMsgReq_Event_Type I2GMsgReq_Event::FUNC_CALL;
const I2GMsgReq_Event_Type I2GMsgReq_Event::Type_MIN;
const I2GMsgReq_Event_Type I2GMsgReq_Event::Type_MAX;
const int I2GMsgReq_Event::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int I2GMsgReq_Event::kTypeFieldNumber;
const int I2GMsgReq_Event::kFuncCallFieldNumber;
#endif  // !_MSC_VER

I2GMsgReq_Event::I2GMsgReq_Event()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:equtils.I2GMsgReq_Event)
}

void I2GMsgReq_Event::InitAsDefaultInstance() {
  funccall_ = const_cast< ::equtils::I2GMsgReq_Event_FuncCall*>(&::equtils::I2GMsgReq_Event_FuncCall::default_instance());
}

I2GMsgReq_Event::I2GMsgReq_Event(const I2GMsgReq_Event& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:equtils.I2GMsgReq_Event)
}

void I2GMsgReq_Event::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  funccall_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

I2GMsgReq_Event::~I2GMsgReq_Event() {
  // @@protoc_insertion_point(destructor:equtils.I2GMsgReq_Event)
  SharedDtor();
}

void I2GMsgReq_Event::SharedDtor() {
  if (this != default_instance_) {
    delete funccall_;
  }
}

void I2GMsgReq_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* I2GMsgReq_Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_Event_descriptor_;
}

const I2GMsgReq_Event& I2GMsgReq_Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_i2g_5fmessage_2eproto();
  return *default_instance_;
}

I2GMsgReq_Event* I2GMsgReq_Event::default_instance_ = NULL;

I2GMsgReq_Event* I2GMsgReq_Event::New() const {
  return new I2GMsgReq_Event;
}

void I2GMsgReq_Event::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 1;
    if (has_funccall()) {
      if (funccall_ != NULL) funccall_->::equtils::I2GMsgReq_Event_FuncCall::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool I2GMsgReq_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:equtils.I2GMsgReq_Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .equtils.I2GMsgReq_Event.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::equtils::I2GMsgReq_Event_Type_IsValid(value)) {
            set_type(static_cast< ::equtils::I2GMsgReq_Event_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FuncCall;
        break;
      }

      // optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
      case 2: {
        if (tag == 18) {
         parse_FuncCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_funccall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:equtils.I2GMsgReq_Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:equtils.I2GMsgReq_Event)
  return false;
#undef DO_
}

void I2GMsgReq_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:equtils.I2GMsgReq_Event)
  // required .equtils.I2GMsgReq_Event.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
  if (has_funccall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->funccall(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:equtils.I2GMsgReq_Event)
}

::google::protobuf::uint8* I2GMsgReq_Event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:equtils.I2GMsgReq_Event)
  // required .equtils.I2GMsgReq_Event.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
  if (has_funccall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->funccall(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:equtils.I2GMsgReq_Event)
  return target;
}

int I2GMsgReq_Event::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .equtils.I2GMsgReq_Event.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
    if (has_funccall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->funccall());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void I2GMsgReq_Event::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const I2GMsgReq_Event* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const I2GMsgReq_Event*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void I2GMsgReq_Event::MergeFrom(const I2GMsgReq_Event& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_funccall()) {
      mutable_funccall()->::equtils::I2GMsgReq_Event_FuncCall::MergeFrom(from.funccall());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void I2GMsgReq_Event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I2GMsgReq_Event::CopyFrom(const I2GMsgReq_Event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I2GMsgReq_Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_funccall()) {
    if (!this->funccall().IsInitialized()) return false;
  }
  return true;
}

void I2GMsgReq_Event::Swap(I2GMsgReq_Event* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(funccall_, other->funccall_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata I2GMsgReq_Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = I2GMsgReq_Event_descriptor_;
  metadata.reflection = I2GMsgReq_Event_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int I2GMsgReq_Initiation::kNodeIdFieldNumber;
#endif  // !_MSC_VER

I2GMsgReq_Initiation::I2GMsgReq_Initiation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:equtils.I2GMsgReq_Initiation)
}

void I2GMsgReq_Initiation::InitAsDefaultInstance() {
}

I2GMsgReq_Initiation::I2GMsgReq_Initiation(const I2GMsgReq_Initiation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:equtils.I2GMsgReq_Initiation)
}

void I2GMsgReq_Initiation::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

I2GMsgReq_Initiation::~I2GMsgReq_Initiation() {
  // @@protoc_insertion_point(destructor:equtils.I2GMsgReq_Initiation)
  SharedDtor();
}

void I2GMsgReq_Initiation::SharedDtor() {
  if (nodeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodeid_;
  }
  if (this != default_instance_) {
  }
}

void I2GMsgReq_Initiation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* I2GMsgReq_Initiation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_Initiation_descriptor_;
}

const I2GMsgReq_Initiation& I2GMsgReq_Initiation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_i2g_5fmessage_2eproto();
  return *default_instance_;
}

I2GMsgReq_Initiation* I2GMsgReq_Initiation::default_instance_ = NULL;

I2GMsgReq_Initiation* I2GMsgReq_Initiation::New() const {
  return new I2GMsgReq_Initiation;
}

void I2GMsgReq_Initiation::Clear() {
  if (has_nodeid()) {
    if (nodeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodeid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool I2GMsgReq_Initiation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:equtils.I2GMsgReq_Initiation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nodeId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodeid().data(), this->nodeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodeid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:equtils.I2GMsgReq_Initiation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:equtils.I2GMsgReq_Initiation)
  return false;
#undef DO_
}

void I2GMsgReq_Initiation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:equtils.I2GMsgReq_Initiation)
  // required string nodeId = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodeid().data(), this->nodeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodeid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nodeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:equtils.I2GMsgReq_Initiation)
}

::google::protobuf::uint8* I2GMsgReq_Initiation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:equtils.I2GMsgReq_Initiation)
  // required string nodeId = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodeid().data(), this->nodeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodeid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:equtils.I2GMsgReq_Initiation)
  return target;
}

int I2GMsgReq_Initiation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string nodeId = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void I2GMsgReq_Initiation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const I2GMsgReq_Initiation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const I2GMsgReq_Initiation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void I2GMsgReq_Initiation::MergeFrom(const I2GMsgReq_Initiation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void I2GMsgReq_Initiation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I2GMsgReq_Initiation::CopyFrom(const I2GMsgReq_Initiation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I2GMsgReq_Initiation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void I2GMsgReq_Initiation::Swap(I2GMsgReq_Initiation* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata I2GMsgReq_Initiation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = I2GMsgReq_Initiation_descriptor_;
  metadata.reflection = I2GMsgReq_Initiation_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* I2GMsgReq_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_Type_descriptor_;
}
bool I2GMsgReq_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const I2GMsgReq_Type I2GMsgReq::EVENT;
const I2GMsgReq_Type I2GMsgReq::INITIATION;
const I2GMsgReq_Type I2GMsgReq::Type_MIN;
const I2GMsgReq_Type I2GMsgReq::Type_MAX;
const int I2GMsgReq::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int I2GMsgReq::kNodeIdFieldNumber;
const int I2GMsgReq::kTypeFieldNumber;
const int I2GMsgReq::kPidFieldNumber;
const int I2GMsgReq::kTidFieldNumber;
const int I2GMsgReq::kMsgIdFieldNumber;
const int I2GMsgReq::kGaMsgIdFieldNumber;
const int I2GMsgReq::kEventFieldNumber;
const int I2GMsgReq::kInitiationFieldNumber;
#endif  // !_MSC_VER

I2GMsgReq::I2GMsgReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:equtils.I2GMsgReq)
}

void I2GMsgReq::InitAsDefaultInstance() {
  event_ = const_cast< ::equtils::I2GMsgReq_Event*>(&::equtils::I2GMsgReq_Event::default_instance());
  initiation_ = const_cast< ::equtils::I2GMsgReq_Initiation*>(&::equtils::I2GMsgReq_Initiation::default_instance());
}

I2GMsgReq::I2GMsgReq(const I2GMsgReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:equtils.I2GMsgReq)
}

void I2GMsgReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  node_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  pid_ = 0;
  tid_ = 0;
  msg_id_ = 0;
  ga_msg_id_ = 0;
  event_ = NULL;
  initiation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

I2GMsgReq::~I2GMsgReq() {
  // @@protoc_insertion_point(destructor:equtils.I2GMsgReq)
  SharedDtor();
}

void I2GMsgReq::SharedDtor() {
  if (node_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete node_id_;
  }
  if (this != default_instance_) {
    delete event_;
    delete initiation_;
  }
}

void I2GMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* I2GMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgReq_descriptor_;
}

const I2GMsgReq& I2GMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_i2g_5fmessage_2eproto();
  return *default_instance_;
}

I2GMsgReq* I2GMsgReq::default_instance_ = NULL;

I2GMsgReq* I2GMsgReq::New() const {
  return new I2GMsgReq;
}

void I2GMsgReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<I2GMsgReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(pid_, msg_id_);
    if (has_node_id()) {
      if (node_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        node_id_->clear();
      }
    }
    type_ = 1;
    ga_msg_id_ = 0;
    if (has_event()) {
      if (event_ != NULL) event_->::equtils::I2GMsgReq_Event::Clear();
    }
    if (has_initiation()) {
      if (initiation_ != NULL) initiation_->::equtils::I2GMsgReq_Initiation::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool I2GMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:equtils.I2GMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string node_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_id().data(), this->node_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "node_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .equtils.I2GMsgReq.Type type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::equtils::I2GMsgReq_Type_IsValid(value)) {
            set_type(static_cast< ::equtils::I2GMsgReq_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pid;
        break;
      }

      // required int32 pid = 3;
      case 3: {
        if (tag == 24) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tid;
        break;
      }

      // required int32 tid = 4;
      case 4: {
        if (tag == 32) {
         parse_tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msg_id;
        break;
      }

      // required int32 msg_id = 5;
      case 5: {
        if (tag == 40) {
         parse_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_id_)));
          set_has_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ga_msg_id;
        break;
      }

      // optional int32 ga_msg_id = 6;
      case 6: {
        if (tag == 48) {
         parse_ga_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ga_msg_id_)));
          set_has_ga_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Event;
        break;
      }

      // optional .equtils.I2GMsgReq_Event Event = 7;
      case 7: {
        if (tag == 58) {
         parse_Event:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Initiation;
        break;
      }

      // optional .equtils.I2GMsgReq_Initiation Initiation = 8;
      case 8: {
        if (tag == 66) {
         parse_Initiation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initiation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:equtils.I2GMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:equtils.I2GMsgReq)
  return false;
#undef DO_
}

void I2GMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:equtils.I2GMsgReq)
  // required string node_id = 1;
  if (has_node_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_id().data(), this->node_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "node_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->node_id(), output);
  }

  // required .equtils.I2GMsgReq.Type type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required int32 pid = 3;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pid(), output);
  }

  // required int32 tid = 4;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tid(), output);
  }

  // required int32 msg_id = 5;
  if (has_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->msg_id(), output);
  }

  // optional int32 ga_msg_id = 6;
  if (has_ga_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ga_msg_id(), output);
  }

  // optional .equtils.I2GMsgReq_Event Event = 7;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->event(), output);
  }

  // optional .equtils.I2GMsgReq_Initiation Initiation = 8;
  if (has_initiation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->initiation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:equtils.I2GMsgReq)
}

::google::protobuf::uint8* I2GMsgReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:equtils.I2GMsgReq)
  // required string node_id = 1;
  if (has_node_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_id().data(), this->node_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "node_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->node_id(), target);
  }

  // required .equtils.I2GMsgReq.Type type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required int32 pid = 3;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pid(), target);
  }

  // required int32 tid = 4;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tid(), target);
  }

  // required int32 msg_id = 5;
  if (has_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->msg_id(), target);
  }

  // optional int32 ga_msg_id = 6;
  if (has_ga_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ga_msg_id(), target);
  }

  // optional .equtils.I2GMsgReq_Event Event = 7;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->event(), target);
  }

  // optional .equtils.I2GMsgReq_Initiation Initiation = 8;
  if (has_initiation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->initiation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:equtils.I2GMsgReq)
  return target;
}

int I2GMsgReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string node_id = 1;
    if (has_node_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->node_id());
    }

    // required .equtils.I2GMsgReq.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required int32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

    // required int32 tid = 4;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // required int32 msg_id = 5;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_id());
    }

    // optional int32 ga_msg_id = 6;
    if (has_ga_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ga_msg_id());
    }

    // optional .equtils.I2GMsgReq_Event Event = 7;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->event());
    }

    // optional .equtils.I2GMsgReq_Initiation Initiation = 8;
    if (has_initiation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initiation());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void I2GMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const I2GMsgReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const I2GMsgReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void I2GMsgReq::MergeFrom(const I2GMsgReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node_id()) {
      set_node_id(from.node_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_msg_id()) {
      set_msg_id(from.msg_id());
    }
    if (from.has_ga_msg_id()) {
      set_ga_msg_id(from.ga_msg_id());
    }
    if (from.has_event()) {
      mutable_event()->::equtils::I2GMsgReq_Event::MergeFrom(from.event());
    }
    if (from.has_initiation()) {
      mutable_initiation()->::equtils::I2GMsgReq_Initiation::MergeFrom(from.initiation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void I2GMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I2GMsgReq::CopyFrom(const I2GMsgReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I2GMsgReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_event()) {
    if (!this->event().IsInitialized()) return false;
  }
  if (has_initiation()) {
    if (!this->initiation().IsInitialized()) return false;
  }
  return true;
}

void I2GMsgReq::Swap(I2GMsgReq* other) {
  if (other != this) {
    std::swap(node_id_, other->node_id_);
    std::swap(type_, other->type_);
    std::swap(pid_, other->pid_);
    std::swap(tid_, other->tid_);
    std::swap(msg_id_, other->msg_id_);
    std::swap(ga_msg_id_, other->ga_msg_id_);
    std::swap(event_, other->event_);
    std::swap(initiation_, other->initiation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata I2GMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = I2GMsgReq_descriptor_;
  metadata.reflection = I2GMsgReq_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* I2GMsgRsp_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgRsp_Result_descriptor_;
}
bool I2GMsgRsp_Result_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const I2GMsgRsp_Result I2GMsgRsp::ACK;
const I2GMsgRsp_Result I2GMsgRsp::ERROR;
const I2GMsgRsp_Result I2GMsgRsp::END;
const I2GMsgRsp_Result I2GMsgRsp::Result_MIN;
const I2GMsgRsp_Result I2GMsgRsp::Result_MAX;
const int I2GMsgRsp::Result_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int I2GMsgRsp::kResFieldNumber;
const int I2GMsgRsp::kMsgIdFieldNumber;
const int I2GMsgRsp::kGaMsgIdFieldNumber;
#endif  // !_MSC_VER

I2GMsgRsp::I2GMsgRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:equtils.I2GMsgRsp)
}

void I2GMsgRsp::InitAsDefaultInstance() {
}

I2GMsgRsp::I2GMsgRsp(const I2GMsgRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:equtils.I2GMsgRsp)
}

void I2GMsgRsp::SharedCtor() {
  _cached_size_ = 0;
  res_ = 1;
  msg_id_ = 0;
  ga_msg_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

I2GMsgRsp::~I2GMsgRsp() {
  // @@protoc_insertion_point(destructor:equtils.I2GMsgRsp)
  SharedDtor();
}

void I2GMsgRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void I2GMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* I2GMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return I2GMsgRsp_descriptor_;
}

const I2GMsgRsp& I2GMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_i2g_5fmessage_2eproto();
  return *default_instance_;
}

I2GMsgRsp* I2GMsgRsp::default_instance_ = NULL;

I2GMsgRsp* I2GMsgRsp::New() const {
  return new I2GMsgRsp;
}

void I2GMsgRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<I2GMsgRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(msg_id_, ga_msg_id_);
    res_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool I2GMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:equtils.I2GMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .equtils.I2GMsgRsp.Result res = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::equtils::I2GMsgRsp_Result_IsValid(value)) {
            set_res(static_cast< ::equtils::I2GMsgRsp_Result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_id;
        break;
      }

      // optional int32 msg_id = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_id_)));
          set_has_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ga_msg_id;
        break;
      }

      // optional int32 ga_msg_id = 3;
      case 3: {
        if (tag == 24) {
         parse_ga_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ga_msg_id_)));
          set_has_ga_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:equtils.I2GMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:equtils.I2GMsgRsp)
  return false;
#undef DO_
}

void I2GMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:equtils.I2GMsgRsp)
  // required .equtils.I2GMsgRsp.Result res = 1;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->res(), output);
  }

  // optional int32 msg_id = 2;
  if (has_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_id(), output);
  }

  // optional int32 ga_msg_id = 3;
  if (has_ga_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ga_msg_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:equtils.I2GMsgRsp)
}

::google::protobuf::uint8* I2GMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:equtils.I2GMsgRsp)
  // required .equtils.I2GMsgRsp.Result res = 1;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->res(), target);
  }

  // optional int32 msg_id = 2;
  if (has_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_id(), target);
  }

  // optional int32 ga_msg_id = 3;
  if (has_ga_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ga_msg_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:equtils.I2GMsgRsp)
  return target;
}

int I2GMsgRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .equtils.I2GMsgRsp.Result res = 1;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int32 msg_id = 2;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_id());
    }

    // optional int32 ga_msg_id = 3;
    if (has_ga_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ga_msg_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void I2GMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const I2GMsgRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const I2GMsgRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void I2GMsgRsp::MergeFrom(const I2GMsgRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_msg_id()) {
      set_msg_id(from.msg_id());
    }
    if (from.has_ga_msg_id()) {
      set_ga_msg_id(from.ga_msg_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void I2GMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I2GMsgRsp::CopyFrom(const I2GMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I2GMsgRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void I2GMsgRsp::Swap(I2GMsgRsp* other) {
  if (other != this) {
    std::swap(res_, other->res_);
    std::swap(msg_id_, other->msg_id_);
    std::swap(ga_msg_id_, other->ga_msg_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata I2GMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = I2GMsgRsp_descriptor_;
  metadata.reflection = I2GMsgRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace equtils

// @@protoc_insertion_point(global_scope)
