// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: i2g_message.proto

#ifndef PROTOBUF_i2g_5fmessage_2eproto__INCLUDED
#define PROTOBUF_i2g_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace equtils {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_i2g_5fmessage_2eproto();
void protobuf_AssignDesc_i2g_5fmessage_2eproto();
void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

class I2GMsgReq_Event_FuncCall;
class I2GMsgReq_Event;
class I2GMsgReq_Initiation;
class I2GMsgReq;
class I2GMsgRsp;

enum I2GMsgReq_Event_Type {
  I2GMsgReq_Event_Type_FUNC_CALL = 1,
  I2GMsgReq_Event_Type_EXIT = 2
};
bool I2GMsgReq_Event_Type_IsValid(int value);
const I2GMsgReq_Event_Type I2GMsgReq_Event_Type_Type_MIN = I2GMsgReq_Event_Type_FUNC_CALL;
const I2GMsgReq_Event_Type I2GMsgReq_Event_Type_Type_MAX = I2GMsgReq_Event_Type_EXIT;
const int I2GMsgReq_Event_Type_Type_ARRAYSIZE = I2GMsgReq_Event_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* I2GMsgReq_Event_Type_descriptor();
inline const ::std::string& I2GMsgReq_Event_Type_Name(I2GMsgReq_Event_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    I2GMsgReq_Event_Type_descriptor(), value);
}
inline bool I2GMsgReq_Event_Type_Parse(
    const ::std::string& name, I2GMsgReq_Event_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<I2GMsgReq_Event_Type>(
    I2GMsgReq_Event_Type_descriptor(), name, value);
}
enum I2GMsgReq_Type {
  I2GMsgReq_Type_EVENT = 1,
  I2GMsgReq_Type_INITIATION = 2
};
bool I2GMsgReq_Type_IsValid(int value);
const I2GMsgReq_Type I2GMsgReq_Type_Type_MIN = I2GMsgReq_Type_EVENT;
const I2GMsgReq_Type I2GMsgReq_Type_Type_MAX = I2GMsgReq_Type_INITIATION;
const int I2GMsgReq_Type_Type_ARRAYSIZE = I2GMsgReq_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* I2GMsgReq_Type_descriptor();
inline const ::std::string& I2GMsgReq_Type_Name(I2GMsgReq_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    I2GMsgReq_Type_descriptor(), value);
}
inline bool I2GMsgReq_Type_Parse(
    const ::std::string& name, I2GMsgReq_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<I2GMsgReq_Type>(
    I2GMsgReq_Type_descriptor(), name, value);
}
enum I2GMsgRsp_Result {
  I2GMsgRsp_Result_ACK = 1,
  I2GMsgRsp_Result_ERROR = 2,
  I2GMsgRsp_Result_END = 3
};
bool I2GMsgRsp_Result_IsValid(int value);
const I2GMsgRsp_Result I2GMsgRsp_Result_Result_MIN = I2GMsgRsp_Result_ACK;
const I2GMsgRsp_Result I2GMsgRsp_Result_Result_MAX = I2GMsgRsp_Result_END;
const int I2GMsgRsp_Result_Result_ARRAYSIZE = I2GMsgRsp_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* I2GMsgRsp_Result_descriptor();
inline const ::std::string& I2GMsgRsp_Result_Name(I2GMsgRsp_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    I2GMsgRsp_Result_descriptor(), value);
}
inline bool I2GMsgRsp_Result_Parse(
    const ::std::string& name, I2GMsgRsp_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<I2GMsgRsp_Result>(
    I2GMsgRsp_Result_descriptor(), name, value);
}
// ===================================================================

class I2GMsgReq_Event_FuncCall : public ::google::protobuf::Message {
 public:
  I2GMsgReq_Event_FuncCall();
  virtual ~I2GMsgReq_Event_FuncCall();

  I2GMsgReq_Event_FuncCall(const I2GMsgReq_Event_FuncCall& from);

  inline I2GMsgReq_Event_FuncCall& operator=(const I2GMsgReq_Event_FuncCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const I2GMsgReq_Event_FuncCall& default_instance();

  void Swap(I2GMsgReq_Event_FuncCall* other);

  // implements Message ----------------------------------------------

  I2GMsgReq_Event_FuncCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const I2GMsgReq_Event_FuncCall& from);
  void MergeFrom(const I2GMsgReq_Event_FuncCall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:equtils.I2GMsgReq_Event_FuncCall)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_i2g_5fmessage_2eproto();
  friend void protobuf_AssignDesc_i2g_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static I2GMsgReq_Event_FuncCall* default_instance_;
};
// -------------------------------------------------------------------

class I2GMsgReq_Event : public ::google::protobuf::Message {
 public:
  I2GMsgReq_Event();
  virtual ~I2GMsgReq_Event();

  I2GMsgReq_Event(const I2GMsgReq_Event& from);

  inline I2GMsgReq_Event& operator=(const I2GMsgReq_Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const I2GMsgReq_Event& default_instance();

  void Swap(I2GMsgReq_Event* other);

  // implements Message ----------------------------------------------

  I2GMsgReq_Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const I2GMsgReq_Event& from);
  void MergeFrom(const I2GMsgReq_Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef I2GMsgReq_Event_Type Type;
  static const Type FUNC_CALL = I2GMsgReq_Event_Type_FUNC_CALL;
  static const Type EXIT = I2GMsgReq_Event_Type_EXIT;
  static inline bool Type_IsValid(int value) {
    return I2GMsgReq_Event_Type_IsValid(value);
  }
  static const Type Type_MIN =
    I2GMsgReq_Event_Type_Type_MIN;
  static const Type Type_MAX =
    I2GMsgReq_Event_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    I2GMsgReq_Event_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return I2GMsgReq_Event_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return I2GMsgReq_Event_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return I2GMsgReq_Event_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .equtils.I2GMsgReq_Event.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::equtils::I2GMsgReq_Event_Type type() const;
  inline void set_type(::equtils::I2GMsgReq_Event_Type value);

  // optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
  inline bool has_funccall() const;
  inline void clear_funccall();
  static const int kFuncCallFieldNumber = 2;
  inline const ::equtils::I2GMsgReq_Event_FuncCall& funccall() const;
  inline ::equtils::I2GMsgReq_Event_FuncCall* mutable_funccall();
  inline ::equtils::I2GMsgReq_Event_FuncCall* release_funccall();
  inline void set_allocated_funccall(::equtils::I2GMsgReq_Event_FuncCall* funccall);

  // @@protoc_insertion_point(class_scope:equtils.I2GMsgReq_Event)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_funccall();
  inline void clear_has_funccall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::equtils::I2GMsgReq_Event_FuncCall* funccall_;
  int type_;
  friend void  protobuf_AddDesc_i2g_5fmessage_2eproto();
  friend void protobuf_AssignDesc_i2g_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static I2GMsgReq_Event* default_instance_;
};
// -------------------------------------------------------------------

class I2GMsgReq_Initiation : public ::google::protobuf::Message {
 public:
  I2GMsgReq_Initiation();
  virtual ~I2GMsgReq_Initiation();

  I2GMsgReq_Initiation(const I2GMsgReq_Initiation& from);

  inline I2GMsgReq_Initiation& operator=(const I2GMsgReq_Initiation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const I2GMsgReq_Initiation& default_instance();

  void Swap(I2GMsgReq_Initiation* other);

  // implements Message ----------------------------------------------

  I2GMsgReq_Initiation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const I2GMsgReq_Initiation& from);
  void MergeFrom(const I2GMsgReq_Initiation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string processId = 1;
  inline bool has_processid() const;
  inline void clear_processid();
  static const int kProcessIdFieldNumber = 1;
  inline const ::std::string& processid() const;
  inline void set_processid(const ::std::string& value);
  inline void set_processid(const char* value);
  inline void set_processid(const char* value, size_t size);
  inline ::std::string* mutable_processid();
  inline ::std::string* release_processid();
  inline void set_allocated_processid(::std::string* processid);

  // @@protoc_insertion_point(class_scope:equtils.I2GMsgReq_Initiation)
 private:
  inline void set_has_processid();
  inline void clear_has_processid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* processid_;
  friend void  protobuf_AddDesc_i2g_5fmessage_2eproto();
  friend void protobuf_AssignDesc_i2g_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static I2GMsgReq_Initiation* default_instance_;
};
// -------------------------------------------------------------------

class I2GMsgReq : public ::google::protobuf::Message {
 public:
  I2GMsgReq();
  virtual ~I2GMsgReq();

  I2GMsgReq(const I2GMsgReq& from);

  inline I2GMsgReq& operator=(const I2GMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const I2GMsgReq& default_instance();

  void Swap(I2GMsgReq* other);

  // implements Message ----------------------------------------------

  I2GMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const I2GMsgReq& from);
  void MergeFrom(const I2GMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef I2GMsgReq_Type Type;
  static const Type EVENT = I2GMsgReq_Type_EVENT;
  static const Type INITIATION = I2GMsgReq_Type_INITIATION;
  static inline bool Type_IsValid(int value) {
    return I2GMsgReq_Type_IsValid(value);
  }
  static const Type Type_MIN =
    I2GMsgReq_Type_Type_MIN;
  static const Type Type_MAX =
    I2GMsgReq_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    I2GMsgReq_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return I2GMsgReq_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return I2GMsgReq_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return I2GMsgReq_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string process_id = 1;
  inline bool has_process_id() const;
  inline void clear_process_id();
  static const int kProcessIdFieldNumber = 1;
  inline const ::std::string& process_id() const;
  inline void set_process_id(const ::std::string& value);
  inline void set_process_id(const char* value);
  inline void set_process_id(const char* value, size_t size);
  inline ::std::string* mutable_process_id();
  inline ::std::string* release_process_id();
  inline void set_allocated_process_id(::std::string* process_id);

  // required .equtils.I2GMsgReq.Type type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::equtils::I2GMsgReq_Type type() const;
  inline void set_type(::equtils::I2GMsgReq_Type value);

  // required int32 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);

  // required int32 tid = 4;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 4;
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // required int32 msg_id = 5;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional int32 ga_msg_id = 6;
  inline bool has_ga_msg_id() const;
  inline void clear_ga_msg_id();
  static const int kGaMsgIdFieldNumber = 6;
  inline ::google::protobuf::int32 ga_msg_id() const;
  inline void set_ga_msg_id(::google::protobuf::int32 value);

  // optional .equtils.I2GMsgReq_Event Event = 7;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 7;
  inline const ::equtils::I2GMsgReq_Event& event() const;
  inline ::equtils::I2GMsgReq_Event* mutable_event();
  inline ::equtils::I2GMsgReq_Event* release_event();
  inline void set_allocated_event(::equtils::I2GMsgReq_Event* event);

  // optional .equtils.I2GMsgReq_Initiation Initiation = 8;
  inline bool has_initiation() const;
  inline void clear_initiation();
  static const int kInitiationFieldNumber = 8;
  inline const ::equtils::I2GMsgReq_Initiation& initiation() const;
  inline ::equtils::I2GMsgReq_Initiation* mutable_initiation();
  inline ::equtils::I2GMsgReq_Initiation* release_initiation();
  inline void set_allocated_initiation(::equtils::I2GMsgReq_Initiation* initiation);

  // @@protoc_insertion_point(class_scope:equtils.I2GMsgReq)
 private:
  inline void set_has_process_id();
  inline void clear_has_process_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_ga_msg_id();
  inline void clear_has_ga_msg_id();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_initiation();
  inline void clear_has_initiation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* process_id_;
  int type_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 msg_id_;
  ::equtils::I2GMsgReq_Event* event_;
  ::equtils::I2GMsgReq_Initiation* initiation_;
  ::google::protobuf::int32 ga_msg_id_;
  friend void  protobuf_AddDesc_i2g_5fmessage_2eproto();
  friend void protobuf_AssignDesc_i2g_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static I2GMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class I2GMsgRsp : public ::google::protobuf::Message {
 public:
  I2GMsgRsp();
  virtual ~I2GMsgRsp();

  I2GMsgRsp(const I2GMsgRsp& from);

  inline I2GMsgRsp& operator=(const I2GMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const I2GMsgRsp& default_instance();

  void Swap(I2GMsgRsp* other);

  // implements Message ----------------------------------------------

  I2GMsgRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const I2GMsgRsp& from);
  void MergeFrom(const I2GMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef I2GMsgRsp_Result Result;
  static const Result ACK = I2GMsgRsp_Result_ACK;
  static const Result ERROR = I2GMsgRsp_Result_ERROR;
  static const Result END = I2GMsgRsp_Result_END;
  static inline bool Result_IsValid(int value) {
    return I2GMsgRsp_Result_IsValid(value);
  }
  static const Result Result_MIN =
    I2GMsgRsp_Result_Result_MIN;
  static const Result Result_MAX =
    I2GMsgRsp_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    I2GMsgRsp_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return I2GMsgRsp_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return I2GMsgRsp_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return I2GMsgRsp_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .equtils.I2GMsgRsp.Result res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::equtils::I2GMsgRsp_Result res() const;
  inline void set_res(::equtils::I2GMsgRsp_Result value);

  // optional int32 msg_id = 2;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional int32 ga_msg_id = 3;
  inline bool has_ga_msg_id() const;
  inline void clear_ga_msg_id();
  static const int kGaMsgIdFieldNumber = 3;
  inline ::google::protobuf::int32 ga_msg_id() const;
  inline void set_ga_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:equtils.I2GMsgRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_ga_msg_id();
  inline void clear_has_ga_msg_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int res_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 ga_msg_id_;
  friend void  protobuf_AddDesc_i2g_5fmessage_2eproto();
  friend void protobuf_AssignDesc_i2g_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_i2g_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static I2GMsgRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// I2GMsgReq_Event_FuncCall

// required string name = 1;
inline bool I2GMsgReq_Event_FuncCall::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void I2GMsgReq_Event_FuncCall::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void I2GMsgReq_Event_FuncCall::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void I2GMsgReq_Event_FuncCall::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& I2GMsgReq_Event_FuncCall::name() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq_Event_FuncCall.name)
  return *name_;
}
inline void I2GMsgReq_Event_FuncCall::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq_Event_FuncCall.name)
}
inline void I2GMsgReq_Event_FuncCall::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.I2GMsgReq_Event_FuncCall.name)
}
inline void I2GMsgReq_Event_FuncCall::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.I2GMsgReq_Event_FuncCall.name)
}
inline ::std::string* I2GMsgReq_Event_FuncCall::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq_Event_FuncCall.name)
  return name_;
}
inline ::std::string* I2GMsgReq_Event_FuncCall::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void I2GMsgReq_Event_FuncCall::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq_Event_FuncCall.name)
}

// -------------------------------------------------------------------

// I2GMsgReq_Event

// required .equtils.I2GMsgReq_Event.Type type = 1;
inline bool I2GMsgReq_Event::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void I2GMsgReq_Event::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void I2GMsgReq_Event::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void I2GMsgReq_Event::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::equtils::I2GMsgReq_Event_Type I2GMsgReq_Event::type() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq_Event.type)
  return static_cast< ::equtils::I2GMsgReq_Event_Type >(type_);
}
inline void I2GMsgReq_Event::set_type(::equtils::I2GMsgReq_Event_Type value) {
  assert(::equtils::I2GMsgReq_Event_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq_Event.type)
}

// optional .equtils.I2GMsgReq_Event_FuncCall FuncCall = 2;
inline bool I2GMsgReq_Event::has_funccall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void I2GMsgReq_Event::set_has_funccall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void I2GMsgReq_Event::clear_has_funccall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void I2GMsgReq_Event::clear_funccall() {
  if (funccall_ != NULL) funccall_->::equtils::I2GMsgReq_Event_FuncCall::Clear();
  clear_has_funccall();
}
inline const ::equtils::I2GMsgReq_Event_FuncCall& I2GMsgReq_Event::funccall() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq_Event.FuncCall)
  return funccall_ != NULL ? *funccall_ : *default_instance_->funccall_;
}
inline ::equtils::I2GMsgReq_Event_FuncCall* I2GMsgReq_Event::mutable_funccall() {
  set_has_funccall();
  if (funccall_ == NULL) funccall_ = new ::equtils::I2GMsgReq_Event_FuncCall;
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq_Event.FuncCall)
  return funccall_;
}
inline ::equtils::I2GMsgReq_Event_FuncCall* I2GMsgReq_Event::release_funccall() {
  clear_has_funccall();
  ::equtils::I2GMsgReq_Event_FuncCall* temp = funccall_;
  funccall_ = NULL;
  return temp;
}
inline void I2GMsgReq_Event::set_allocated_funccall(::equtils::I2GMsgReq_Event_FuncCall* funccall) {
  delete funccall_;
  funccall_ = funccall;
  if (funccall) {
    set_has_funccall();
  } else {
    clear_has_funccall();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq_Event.FuncCall)
}

// -------------------------------------------------------------------

// I2GMsgReq_Initiation

// required string processId = 1;
inline bool I2GMsgReq_Initiation::has_processid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void I2GMsgReq_Initiation::set_has_processid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void I2GMsgReq_Initiation::clear_has_processid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void I2GMsgReq_Initiation::clear_processid() {
  if (processid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_->clear();
  }
  clear_has_processid();
}
inline const ::std::string& I2GMsgReq_Initiation::processid() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq_Initiation.processId)
  return *processid_;
}
inline void I2GMsgReq_Initiation::set_processid(const ::std::string& value) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq_Initiation.processId)
}
inline void I2GMsgReq_Initiation::set_processid(const char* value) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.I2GMsgReq_Initiation.processId)
}
inline void I2GMsgReq_Initiation::set_processid(const char* value, size_t size) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.I2GMsgReq_Initiation.processId)
}
inline ::std::string* I2GMsgReq_Initiation::mutable_processid() {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq_Initiation.processId)
  return processid_;
}
inline ::std::string* I2GMsgReq_Initiation::release_processid() {
  clear_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = processid_;
    processid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void I2GMsgReq_Initiation::set_allocated_processid(::std::string* processid) {
  if (processid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete processid_;
  }
  if (processid) {
    set_has_processid();
    processid_ = processid;
  } else {
    clear_has_processid();
    processid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq_Initiation.processId)
}

// -------------------------------------------------------------------

// I2GMsgReq

// required string process_id = 1;
inline bool I2GMsgReq::has_process_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void I2GMsgReq::set_has_process_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void I2GMsgReq::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void I2GMsgReq::clear_process_id() {
  if (process_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_->clear();
  }
  clear_has_process_id();
}
inline const ::std::string& I2GMsgReq::process_id() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.process_id)
  return *process_id_;
}
inline void I2GMsgReq::set_process_id(const ::std::string& value) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.process_id)
}
inline void I2GMsgReq::set_process_id(const char* value) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.I2GMsgReq.process_id)
}
inline void I2GMsgReq::set_process_id(const char* value, size_t size) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.I2GMsgReq.process_id)
}
inline ::std::string* I2GMsgReq::mutable_process_id() {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq.process_id)
  return process_id_;
}
inline ::std::string* I2GMsgReq::release_process_id() {
  clear_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = process_id_;
    process_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void I2GMsgReq::set_allocated_process_id(::std::string* process_id) {
  if (process_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete process_id_;
  }
  if (process_id) {
    set_has_process_id();
    process_id_ = process_id;
  } else {
    clear_has_process_id();
    process_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq.process_id)
}

// required .equtils.I2GMsgReq.Type type = 2;
inline bool I2GMsgReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void I2GMsgReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void I2GMsgReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void I2GMsgReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::equtils::I2GMsgReq_Type I2GMsgReq::type() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.type)
  return static_cast< ::equtils::I2GMsgReq_Type >(type_);
}
inline void I2GMsgReq::set_type(::equtils::I2GMsgReq_Type value) {
  assert(::equtils::I2GMsgReq_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.type)
}

// required int32 pid = 3;
inline bool I2GMsgReq::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void I2GMsgReq::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void I2GMsgReq::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void I2GMsgReq::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 I2GMsgReq::pid() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.pid)
  return pid_;
}
inline void I2GMsgReq::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.pid)
}

// required int32 tid = 4;
inline bool I2GMsgReq::has_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void I2GMsgReq::set_has_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void I2GMsgReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void I2GMsgReq::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 I2GMsgReq::tid() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.tid)
  return tid_;
}
inline void I2GMsgReq::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.tid)
}

// required int32 msg_id = 5;
inline bool I2GMsgReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void I2GMsgReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void I2GMsgReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void I2GMsgReq::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 I2GMsgReq::msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.msg_id)
  return msg_id_;
}
inline void I2GMsgReq::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.msg_id)
}

// optional int32 ga_msg_id = 6;
inline bool I2GMsgReq::has_ga_msg_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void I2GMsgReq::set_has_ga_msg_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void I2GMsgReq::clear_has_ga_msg_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void I2GMsgReq::clear_ga_msg_id() {
  ga_msg_id_ = 0;
  clear_has_ga_msg_id();
}
inline ::google::protobuf::int32 I2GMsgReq::ga_msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.ga_msg_id)
  return ga_msg_id_;
}
inline void I2GMsgReq::set_ga_msg_id(::google::protobuf::int32 value) {
  set_has_ga_msg_id();
  ga_msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgReq.ga_msg_id)
}

// optional .equtils.I2GMsgReq_Event Event = 7;
inline bool I2GMsgReq::has_event() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void I2GMsgReq::set_has_event() {
  _has_bits_[0] |= 0x00000040u;
}
inline void I2GMsgReq::clear_has_event() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void I2GMsgReq::clear_event() {
  if (event_ != NULL) event_->::equtils::I2GMsgReq_Event::Clear();
  clear_has_event();
}
inline const ::equtils::I2GMsgReq_Event& I2GMsgReq::event() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.Event)
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::equtils::I2GMsgReq_Event* I2GMsgReq::mutable_event() {
  set_has_event();
  if (event_ == NULL) event_ = new ::equtils::I2GMsgReq_Event;
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq.Event)
  return event_;
}
inline ::equtils::I2GMsgReq_Event* I2GMsgReq::release_event() {
  clear_has_event();
  ::equtils::I2GMsgReq_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline void I2GMsgReq::set_allocated_event(::equtils::I2GMsgReq_Event* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq.Event)
}

// optional .equtils.I2GMsgReq_Initiation Initiation = 8;
inline bool I2GMsgReq::has_initiation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void I2GMsgReq::set_has_initiation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void I2GMsgReq::clear_has_initiation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void I2GMsgReq::clear_initiation() {
  if (initiation_ != NULL) initiation_->::equtils::I2GMsgReq_Initiation::Clear();
  clear_has_initiation();
}
inline const ::equtils::I2GMsgReq_Initiation& I2GMsgReq::initiation() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgReq.Initiation)
  return initiation_ != NULL ? *initiation_ : *default_instance_->initiation_;
}
inline ::equtils::I2GMsgReq_Initiation* I2GMsgReq::mutable_initiation() {
  set_has_initiation();
  if (initiation_ == NULL) initiation_ = new ::equtils::I2GMsgReq_Initiation;
  // @@protoc_insertion_point(field_mutable:equtils.I2GMsgReq.Initiation)
  return initiation_;
}
inline ::equtils::I2GMsgReq_Initiation* I2GMsgReq::release_initiation() {
  clear_has_initiation();
  ::equtils::I2GMsgReq_Initiation* temp = initiation_;
  initiation_ = NULL;
  return temp;
}
inline void I2GMsgReq::set_allocated_initiation(::equtils::I2GMsgReq_Initiation* initiation) {
  delete initiation_;
  initiation_ = initiation;
  if (initiation) {
    set_has_initiation();
  } else {
    clear_has_initiation();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.I2GMsgReq.Initiation)
}

// -------------------------------------------------------------------

// I2GMsgRsp

// required .equtils.I2GMsgRsp.Result res = 1;
inline bool I2GMsgRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void I2GMsgRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void I2GMsgRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void I2GMsgRsp::clear_res() {
  res_ = 1;
  clear_has_res();
}
inline ::equtils::I2GMsgRsp_Result I2GMsgRsp::res() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgRsp.res)
  return static_cast< ::equtils::I2GMsgRsp_Result >(res_);
}
inline void I2GMsgRsp::set_res(::equtils::I2GMsgRsp_Result value) {
  assert(::equtils::I2GMsgRsp_Result_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgRsp.res)
}

// optional int32 msg_id = 2;
inline bool I2GMsgRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void I2GMsgRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void I2GMsgRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void I2GMsgRsp::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 I2GMsgRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgRsp.msg_id)
  return msg_id_;
}
inline void I2GMsgRsp::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgRsp.msg_id)
}

// optional int32 ga_msg_id = 3;
inline bool I2GMsgRsp::has_ga_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void I2GMsgRsp::set_has_ga_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void I2GMsgRsp::clear_has_ga_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void I2GMsgRsp::clear_ga_msg_id() {
  ga_msg_id_ = 0;
  clear_has_ga_msg_id();
}
inline ::google::protobuf::int32 I2GMsgRsp::ga_msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.I2GMsgRsp.ga_msg_id)
  return ga_msg_id_;
}
inline void I2GMsgRsp::set_ga_msg_id(::google::protobuf::int32 value) {
  set_has_ga_msg_id();
  ga_msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.I2GMsgRsp.ga_msg_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace equtils

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::equtils::I2GMsgReq_Event_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::I2GMsgReq_Event_Type>() {
  return ::equtils::I2GMsgReq_Event_Type_descriptor();
}
template <> struct is_proto_enum< ::equtils::I2GMsgReq_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::I2GMsgReq_Type>() {
  return ::equtils::I2GMsgReq_Type_descriptor();
}
template <> struct is_proto_enum< ::equtils::I2GMsgRsp_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::I2GMsgRsp_Result>() {
  return ::equtils::I2GMsgRsp_Result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_i2g_5fmessage_2eproto__INCLUDED
